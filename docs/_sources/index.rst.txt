Mouseflow Python API
====================

.. toctree::
   :maxdepth: 3

   mouseflow

Developed by Newcraft, the Mouseflow Python API aims to provide a simpler method to interact with Mouseflow's API within any given Python project.


Development status
==================

This API is currently in alpha stage and is not meant for production use.
The long term aim is to mirror all of mouseflow's API calls and capabilities within this project.

As it stands, testing has been limited to listing available entities along with associated get and post requests.

Put requests have, as of yet, not been tested.


Examples
===============

Initiating a connection:

.. code-block:: python

   from mouseflow import Mouseflow
   ...
   mouseflow = Mouseflow(
      user,
      token,
      Mouseflow.LOCATION_EUROPE
   )

Listing available websites:

.. code-block:: python

   list_of_websites: typing.Dict = mouseflow.websites().list()


Getting a website:

.. code-block:: python

   website = mouseflow.websites("website_name_or_id")

Getting a recording:

.. code-block:: python

   connection.websites(site_name).recordings("optional_recording_id")

Push a tag:

.. code-block:: python

   connection.websites(site_name).recording("recording_id").tag("my tag name").add()

Remove a tag:

.. code-block:: python

   connection.websites(site_name).recording("recording_id").tag("my tag name").remove()

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
